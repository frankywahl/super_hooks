#!/usr/bin/env ruby

require 'super_hooks'
require 'optparse'

OptionParser.new do |opts|
  opts.banner = <<-EOF.gsub(/^\s+/, ' ')
    Usage: #{File.basename(__FILE__)} [options]

    A tool to manage project, user, and global Git hooks for multiple git repositories.

    Supported hooks are #{SuperHooks::Hooks.list}
  EOF

  opts.separator ""

  opts.on("--install", "Replace existing hooks in this repository with a call to git hooks run [hook].  Move old hooks directory to hooks.old") do 
    SuperHooks::Installer.new.run
  end

  opts.on("--uninstall", "Remove existing hooks in this repository and rename hooks.old back to hooks") do 
  end

  opts.on("--install-global", "Create a template .git directory that that will be used whenever a git repository is created or cloned that will remind the user to install git-hooks") do 
  end

  opts.on("--uninstall-global", "Turn off the global .git directory template that has the reminder") do 
  end

  opts.on("--run CMD", "run hooks for CMD (such as pre-commit)") do |cmd|
    puts ARGV 
    puts 
    puts cmd
  end

  opts.on("--list [option]", Array, "list current hooks (for option)") do |options|
    puts SuperHooks::Hooks.new(filters: options).list
  end

  opts.separator ""

  opts.on_tail("-h", "--help", "Print this help message") do 
    puts opts
    exit
  end

end.parse!
